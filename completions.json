{
  "tags": {},
  "properties": {
    "-fx-font": {
      "values": [],
      "description": "inherits"
    },
    "-fx-font-family": {
      "values": [],
      "description": ""
    },
    "-fx-font-size": {
      "values": [],
      "description": ""
    },
    "-fx-font-style": {
      "values": [],
      "description": ""
    },
    "-fx-font-weight": {
      "values": [],
      "description": ""
    },
    "-fx-blend-mode": {
      "values": [
        "add",
        "blue",
        "color-burn",
        "color-dodge",
        "darken",
        "difference",
        "exclusion",
        "green",
        "hard-light",
        "lighten",
        "multiply",
        "overlay",
        "red",
        "screen",
        "soft-light",
        "src-atop",
        "src-in",
        "src-out",
        "src-over"
      ],
      "description": ""
    },
    "-fx-cursor": {
      "values": [
        "crosshair",
        "default",
        "e-resize",
        "h-resize",
        "hand",
        "move",
        "n-resize",
        "ne-resize",
        "null",
        "nw-resize",
        "s-resize",
        "se-resize",
        "sw-resize",
        "text",
        "v-resize",
        "w-resize",
        "wait"
      ],
      "description": "inherits"
    },
    "-fx-effect": {
      "values": [],
      "description": ""
    },
    "-fx-focus-traversable": {
      "values": [],
      "description": "Control sets the default value of the focusTraversable property to true. The default value of the focusTraversable property for the following controls is false: Accordion, Cell, Label, MenuBar, ProgressBar, ProgressIndicator, ScrollBar, ScrollPane, Separator, SplitPane, ToolBar."
    },
    "-fx-opacity": {
      "values": [],
      "description": "[0.0 ... 1.0]"
    },
    "-fx-rotate": {
      "values": [],
      "description": ""
    },
    "-fx-scale-x": {
      "values": [],
      "description": ""
    },
    "-fx-scale-y": {
      "values": [],
      "description": ""
    },
    "-fx-scale-z": {
      "values": [],
      "description": ""
    },
    "-fx-translate-x": {
      "values": [],
      "description": ""
    },
    "-fx-translate-y": {
      "values": [],
      "description": ""
    },
    "-fx-translate-z": {
      "values": [],
      "description": ""
    },
    "visibility": {
      "values": [
        "collapse",
        "hidden",
        "inherit",
        "visible"
      ],
      "description": ""
    },
    "-fx-image": {
      "values": [],
      "description": "Relative URLs are resolved against the URL of the stylesheet."
    },
    "-fx-graphic": {
      "values": [],
      "description": ""
    },
    "-fx-hgap": {
      "values": [],
      "description": ""
    },
    "-fx-vgap": {
      "values": [],
      "description": ""
    },
    "-fx-alignment": {
      "values": [
        "baseline-center",
        "baseline-left",
        "baseline-right",
        "bottom-center",
        "bottom-left",
        "bottom-right",
        "center",
        "center-left",
        "center-right",
        "top-center",
        "top-left",
        "top-right"
      ],
      "description": ""
    },
    "-fx-column-halignment": {
      "values": [
        "center",
        "left",
        "right"
      ],
      "description": ""
    },
    "-fx-row-valignment": {
      "values": [
        "baseline",
        "bottom",
        "center",
        "top"
      ],
      "description": ""
    },
    "-fx-orientation": {
      "values": [
        "horizontal",
        "vertical"
      ],
      "description": ""
    },
    "-fx-grid-lines-visible": {
      "values": [],
      "description": ""
    },
    "-fx-spacing": {
      "values": [],
      "description": ""
    },
    "-fx-fill-height": {
      "values": [],
      "description": ""
    },
    "-fx-region-background": {
      "values": [
        ""
      ],
      "description": "This property is set by specifying -fx-background-color and/or -fx-background-image. Optionally, the properties -fx-background-insets, -fx-background-radius, -fx-background-position, -fx-background-repeat, and -fx-background-size may also be set. In order to set the Region background to null, specify the style \"-fx-background-color: null; -fx-background-image: null;\". There is no shorthand notation for -fx-region-background at this time."
    },
    "-fx-background-color": {
      "values": [],
      "description": "A series of paint values separated by commas."
    },
    "-fx-background-insets": {
      "values": [],
      "description": "A series of size values or sets of four size values, separated by commas. A single size value means all insets are the same. Otherwise, the four values for each inset are given in the order top, right, bottom, left. Each comma-separated value or set of values in the series applies to the corresponding background color."
    },
    "-fx-background-radius": {
      "values": [],
      "description": "The same syntax and semenatics as CSS Backgrounds and Borders Module Level 3: Curve Radii applies to -fx-background-radius. Note that JavaFX supports only the short-hand syntax. Each comma-separated value or set of values in the series applies to the corresponding background color."
    },
    "-fx-background-image": {
      "values": [],
      "description": "A series of image URIs separated by commas."
    },
    "-fx-background-position": {
      "values": [
        "bottom",
        "bottom",
        "center",
        "center",
        "center",
        "center",
        "left",
        "left",
        "right",
        "right",
        "top",
        "top",
        "where"
      ],
      "description": "A series of <bg-position> values separated by commas. Each bg-position item in the series applies to the corresponding image in the background-image series."
    },
    "-fx-background-repeat": {
      "values": [
        "repeat-x",
        "repeat-y",
        "round",
        "space",
        "stretch",
        "where"
      ],
      "description": "A series of <repeat-style> values separated by commas. Each repeat-style item in the series applies to the corresponding image in the background-image series."
    },
    "-fx-background-size": {
      "values": [
        "auto",
        "contain",
        "cover",
        "stretch"
      ],
      "description": "A series of <bg-size> values separated by commas. Each bg-size item in the series applies to the corresponding image in the background-image series."
    },
    "-fx-region-border": {
      "values": [
        ""
      ],
      "description": "This property is set by specifying -fx-border-color and/or -fx-border-image. Optionally -fx-border-insets, -fx-border-radius, -fx-border-style, -fx-border-width, -fx-border-image-insets, -fx-border-image-repeat, -fx-border-image-slice and -fx-border-image-width may be specified. In order to set the Region background to null, specify the style \"-fx-border-color: null; -fx-border-image: null;\". There is no shorthand notation for -fx-region-border at this time."
    },
    "-fx-border-color": {
      "values": [],
      "description": "A series of paint values or sets of four paint values, separated by commas. For each item in the series, if a single paint value is specified, then that paint is used as the border for all sides of the region; and if a set of four paints is specified, they are used for the top, right, bottom, and left borders of the region, in that order. If the border is not rectangular, only the first paint value in the set is used."
    },
    "-fx-border-insets": {
      "values": [],
      "description": "A series of inset or sets of four inset values, separated by commas. For each item in the series, a single inset value means that all insets are the same; and if a set of four inset values is specified, they are used for the top, right, bottom, and left edges of the region, in that order. Each item in the series of insets applies to the corresponding item in the series of border colors."
    },
    "-fx-border-radius": {
      "values": [],
      "description": "Refer to CSS Backgrounds and Borders Module Level 3: Curve Radii. JavaFX supports only the short-hand syntax. Each comma-separated value or set of values in the series applies to the corresponding border color."
    },
    "-fx-border-style": {
      "values": [
        "bevel",
        "butt",
        "dashed",
        "dotted",
        "inside",
        "none",
        "segments(",
        "solid",
        "where",
        "where"
      ],
      "description": "A series of border style values, separated by commas. Each item in the series applies to the corresponding item in the series of border colors. The segments dash-style defines a sequence representing the lengths of the dash segments. Alternate entries in the sequence represent the lengths of the opaque and transparent segments of the dashes. This corresponds to the strokeDashArray variable of Shape. The optional phase parameter defines the point in the dashing pattern that will correspond to the beginning of the stroke. This corresponds to the strokeDashOffset variable of Shape."
    },
    "-fx-border-width": {
      "values": [],
      "description": "A series of width or sets of four width values, separated by commas. For each item in the series, a single width value means that all border widths are the same; and if a set of four width values is specified, they are used for the top, right, bottom, and left border widths, in that order. If the border is not rectangular, only the first width value is used. Each item in the series of widths applies to the corresponding item in the series of border colors."
    },
    "-fx-border-image-source": {
      "values": [],
      "description": "A series of image URIs, separated by commas."
    },
    "-fx-border-image-insets": {
      "values": [],
      "description": "A series of inset or sets of four inset values, separated by commas. For each item in the series, a single inset value means that all insets are the same; and if a set of four inset values is specified, they are used for the top, right, bottom, and left edges of the region, in that order. Each item in the series of insets applies to the corresponding image in the series of border images."
    },
    "-fx-border-image-repeat": {
      "values": [
        "repeat-x",
        "repeat-y",
        "round",
        "space",
        "where"
      ],
      "description": "A series of repeat-style values, separated by commas. Each item in the series applies to the corresponding image in the series of border images."
    },
    "-fx-border-image-slice": {
      "values": [
        "fill?",
        "fill?"
      ],
      "description": "A series of image slice values or sets of four values, separated by commas. Each item in the series applies to the corresponding image in the series of border images. For each item in the series, if four values are given, they specify the size of the top, right, bottom, and left slices. This effectively divides the image into nine regions: an upper left corner, a top edge, an upper right corner, a right edge, a lower right corner, a bottom edge, a lower left corner, a left edge and a middle. If one value is specified, this value is used for the slice values for all four edges. If 'fill' is present, the middle slice is preserved, otherwise it is discarded. Percentage values may be used here, in which case the values are considered proportional to the source image."
    },
    "-fx-border-image-width": {
      "values": [],
      "description": "A series of width or sets of four width values, separated by commas. For each item in the series, a single width value means that all border widths are the same; and if a set of four width values is specified, they are used for the top, right, bottom, and left border widths, in that order. If the border is not rectangular, only the first width value is used. Each item in the series of widths applies to the corresponding item in the series of border images. Percentage values may be used here, in which case the values are considered proportional to the border image area."
    },
    "-fx-padding": {
      "values": [],
      "description": "A sets of four padding values, separated by commas. For each item in the series, a single padding value means that all padding are the same; and if a set of four padding values is specified, they are used for the top, right, bottom, and left edges of the region, in that order."
    },
    "-fx-position-shape": {
      "values": [],
      "description": "If true means the shape centered within the region's width and height, otherwise the shape is positioned at its source position. Has no effect if a shape string is not specified."
    },
    "-fx-scale-shape": {
      "values": [],
      "description": "If true means the shape is scaled to fit the size of the region, otherwise the shape is at its source size, and its position depends on the value of the position-shape property. Has no effect if a shape string is not specified."
    },
    "-fx-shape": {
      "values": [],
      "description": "An SVG path string. By specifying a shape here the region takes on that shape instead of a rectangle or rounded rectangle. The syntax of this path string is specified in [3]."
    },
    "-fx-snap-to-pixel": {
      "values": [],
      "description": "Defines whether this region rounds position/spacing and ceils size values to pixel boundaries when laying out its children."
    },
    "-fx-min-height, -fx-pref-height, -fx-max-height": {
      "values": [],
      "description": "Percentage values are not useful since the actual value would be computed from the width and/or height of the Regions's parent before the parent is laid out."
    },
    "-fx-min-width, -fx-pref-width, -fx-max-width": {
      "values": [],
      "description": "Percentage values are not useful since the actual value would be computed from the width and/or height of the Region's parent before the parent is laid out."
    },
    "-fx-pref-rows": {
      "values": [],
      "description": ""
    },
    "-fx-pref-columns": {
      "values": [],
      "description": ""
    },
    "-fx-pref-tile-width": {
      "values": [],
      "description": ""
    },
    "-fx-pref-tile-height": {
      "values": [],
      "description": ""
    },
    "-fx-tile-alignment": {
      "values": [
        "baseline-center",
        "baseline-left",
        "baseline-right",
        "bottom-center",
        "bottom-left",
        "bottom-right",
        "center",
        "center-left",
        "center-right",
        "top-center",
        "top-left",
        "top-right"
      ],
      "description": ""
    },
    "-fx-fill-width": {
      "values": [],
      "description": ""
    },
    "-fx-fill": {
      "values": [],
      "description": ""
    },
    "-fx-smooth": {
      "values": [],
      "description": ""
    },
    "-fx-stroke": {
      "values": [],
      "description": ""
    },
    "-fx-stroke-type": {
      "values": [
        "centered",
        "inside",
        "outside"
      ],
      "description": ""
    },
    "-fx-stroke-dash-array": {
      "values": [],
      "description": "The initial value is that of an empty array, effectively a solid line."
    },
    "-fx-stroke-dash-offset": {
      "values": [],
      "description": ""
    },
    "-fx-stroke-line-cap": {
      "values": [
        "butt",
        "round",
        "square"
      ],
      "description": ""
    },
    "-fx-stroke-line-join": {
      "values": [
        "bevel",
        "miter",
        "round"
      ],
      "description": ""
    },
    "-fx-stroke-miter-limit": {
      "values": [],
      "description": ""
    },
    "-fx-stroke-width": {
      "values": [],
      "description": ""
    },
    "-fx-arc-height": {
      "values": [],
      "description": ""
    },
    "-fx-arc-width": {
      "values": [],
      "description": ""
    },
    "-fx-font-smoothing-type": {
      "values": [
        "gray",
        "lcd"
      ],
      "description": ""
    },
    "-fx-strikethrough": {
      "values": [],
      "description": ""
    },
    "-fx-text-alignment": {
      "values": [
        "center",
        "justify",
        "left",
        "right"
      ],
      "description": ""
    },
    "-fx-text-origin": {
      "values": [
        "baseline",
        "bottom",
        "top"
      ],
      "description": ""
    },
    "-fx-underline": {
      "values": [],
      "description": ""
    },
    "-fx-context-menu-enabled": {
      "values": [],
      "description": ""
    },
    "-fx-font-scale": {
      "values": [],
      "description": ""
    },
    "-fx-min-width": {
      "values": [],
      "description": ""
    },
    "-fx-min-height": {
      "values": [],
      "description": ""
    },
    "-fx-pref-width": {
      "values": [],
      "description": ""
    },
    "-fx-pref-height": {
      "values": [],
      "description": ""
    },
    "-fx-max-width": {
      "values": [],
      "description": ""
    },
    "-fx-max-height": {
      "values": [],
      "description": ""
    },
    "-fx-cell-size": {
      "values": [],
      "description": "The cell size. For vertical ListView or a TreeView or TableView this is the height, for a horizontal ListView this is the width."
    },
    "-fx-color-label-visible": {
      "values": [],
      "description": ""
    },
    "-fx-skin": {
      "values": [],
      "description": "The class name of the Control's Skin."
    },
    "-fx-show-week-numbers": {
      "values": [],
      "description": ""
    },
    "-fx-text-overrun": {
      "values": [
        "center-ellipsis",
        "center-word-ellipsis",
        "clip",
        "ellipsis",
        "leading-ellipsis",
        "leading-word-ellipsis",
        "word-ellipsis"
      ],
      "description": ""
    },
    "-fx-wrap-text": {
      "values": [],
      "description": ""
    },
    "-fx-content-display": {
      "values": [
        "bottom",
        "center",
        "graphic-only",
        "left",
        "right",
        "right",
        "text-only",
        "top"
      ],
      "description": ""
    },
    "-fx-graphic-text-gap": {
      "values": [],
      "description": ""
    },
    "-fx-label-padding": {
      "values": [],
      "description": ""
    },
    "-fx-text-fill": {
      "values": [],
      "description": ""
    },
    "-fx-ellipsis-string": {
      "values": [],
      "description": ""
    },
    "-fx-use-system-menu-bar": {
      "values": [],
      "description": ""
    },
    "-fx-max-page-indicator-count": {
      "values": [],
      "description": ""
    },
    "-fx-arrows-visible": {
      "values": [],
      "description": ""
    },
    "-fx-tooltip-visible": {
      "values": [],
      "description": "When set to true, a tooltip which shows the page number is set on the page indicators. This property controls whether or not the tooltip is visible on the page indicators and does not affect the visibility of the tooltip set or installed on the Pagination control itself."
    },
    "-fx-page-information-visible": {
      "values": [],
      "description": ""
    },
    "-fx-page-information-alignment": {
      "values": [
        "bottom",
        "left",
        "right",
        "top"
      ],
      "description": ""
    },
    "-fx-indeterminate-bar-length": {
      "values": [],
      "description": ""
    },
    "-fx-indeterminate-bar-escape": {
      "values": [],
      "description": ""
    },
    "-fx-indeterminate-bar-flip": {
      "values": [],
      "description": ""
    },
    "-fx-indeterminate-bar-animation-time": {
      "values": [],
      "description": ""
    },
    "-fx-indeterminate-segment-count": {
      "values": [],
      "description": ""
    },
    "-fx-progress-color": {
      "values": [],
      "description": ""
    },
    "-fx-spin-enabled": {
      "values": [],
      "description": ""
    },
    "-fx-block-increment": {
      "values": [],
      "description": ""
    },
    "-fx-unit-increment": {
      "values": [],
      "description": ""
    },
    "-fx-fit-to-width": {
      "values": [],
      "description": ""
    },
    "-fx-fit-to-height": {
      "values": [],
      "description": ""
    },
    "-fx-pannable": {
      "values": [],
      "description": ""
    },
    "-fx-hbar-policy": {
      "values": [
        "always",
        "as-needed",
        "never"
      ],
      "description": ""
    },
    "-fx-vbar-policy": {
      "values": [
        "always",
        "as-needed",
        "never"
      ],
      "description": ""
    },
    "-fx-halignment": {
      "values": [
        "center",
        "left",
        "right"
      ],
      "description": ""
    },
    "-fx-valignment": {
      "values": [
        "baseline",
        "bottom",
        "center",
        "top"
      ],
      "description": ""
    },
    "-fx-show-tick-labels": {
      "values": [],
      "description": ""
    },
    "-fx-show-tick-marks": {
      "values": [],
      "description": ""
    },
    "-fx-major-tick-unit": {
      "values": [],
      "description": ""
    },
    "-fx-minor-tick-count": {
      "values": [],
      "description": ""
    },
    "-fx-snap-to-ticks": {
      "values": [],
      "description": ""
    },
    "-fx-tab-min-width": {
      "values": [],
      "description": ""
    },
    "-fx-tab-max-width": {
      "values": [],
      "description": ""
    },
    "-fx-tab-min-height": {
      "values": [],
      "description": ""
    },
    "-fx-tab-max-height": {
      "values": [],
      "description": ""
    },
    "-fx-open-tab-animation": {
      "values": [
        "grow",
        "none"
      ],
      "description": "'none' disables Tab opening animation"
    },
    "-fx-close-tab-animation": {
      "values": [
        "grow",
        "none"
      ],
      "description": "'none' disables Tab closing animation"
    },
    "-fx-size": {
      "values": [],
      "description": "The table column header size."
    },
    "-fx-fixed-cell-size": {
      "values": [],
      "description": "If both -fx-cell-size and -fx-fixed-cell-size properties are specified in CSS, -fx-fixed-cell-size takes precedence."
    },
    "-fx-pref-column-count": {
      "values": [
        "number"
      ],
      "description": ""
    },
    "-fx-pref-row-count": {
      "values": [
        "number"
      ],
      "description": ""
    },
    "-fx-prompt-text-fill": {
      "values": [],
      "description": ""
    },
    "-fx-highlight-fill": {
      "values": [],
      "description": ""
    },
    "-fx-highlight-text-fill": {
      "values": [],
      "description": ""
    },
    "-fx-display-caret": {
      "values": [],
      "description": ""
    },
    "-fx-animated": {
      "values": [],
      "description": ""
    },
    "-fx-collapsible": {
      "values": [],
      "description": ""
    },
    "-fx-indent": {
      "values": [],
      "description": "The amout of space to multiply by the treeItem.level to get the left margin"
    },
    "-fx-side": {
      "values": [
        "Side"
      ],
      "description": ""
    },
    "-fx-tick-length": {
      "values": [],
      "description": ""
    },
    "-fx-tick-label-font": {
      "values": [],
      "description": ""
    },
    "-fx-tick-label-fill": {
      "values": [],
      "description": ""
    },
    "-fx-tick-label-gap": {
      "values": [],
      "description": ""
    },
    "-fx-tick-mark-visible": {
      "values": [],
      "description": ""
    },
    "-fx-tick-labels-visible": {
      "values": [],
      "description": ""
    },
    "-fx-bar-gap": {
      "values": [],
      "description": ""
    },
    "-fx-category-gap": {
      "values": [],
      "description": ""
    },
    "-fx-start-margin": {
      "values": [],
      "description": "The margin between the axis start and the first tick-mark"
    },
    "-fx-end-margin": {
      "values": [],
      "description": "The margin between the axis start and the first tick-mark"
    },
    "-fx-gap-start-and-end": {
      "values": [],
      "description": "If this is true then half the space between ticks is left at the start and end"
    },
    "-fx-legend-side": {
      "values": [
        "Side"
      ],
      "description": ""
    },
    "-fx-legend-visible": {
      "values": [],
      "description": ""
    },
    "-fx-title-side": {
      "values": [
        "Side"
      ],
      "description": ""
    },
    "-fx-create-symbols": {
      "values": [],
      "description": ""
    },
    "-fx-tick-unit": {
      "values": [],
      "description": "The value between each major tick mark in data units."
    },
    "-fx-clockwise": {
      "values": [],
      "description": ""
    },
    "-fx-pie-label-visible": {
      "values": [],
      "description": ""
    },
    "-fx-label-line-length": {
      "values": [],
      "description": ""
    },
    "-fx-start-angle": {
      "values": [],
      "description": ""
    },
    "-fx-minor-tick-length": {
      "values": [],
      "description": ""
    },
    "-fx-minor-tick-visible": {
      "values": [],
      "description": ""
    },
    "-fx-alternative-column-fill-visible": {
      "values": [],
      "description": ""
    },
    "-fx-alternative-row-fill-visible": {
      "values": [],
      "description": ""
    },
    "-fx-horizontal-grid-lines-visible": {
      "values": [],
      "description": ""
    },
    "-fx-horizontal-zero-line-visible": {
      "values": [],
      "description": ""
    },
    "-fx-vertical-grid-lines-visible": {
      "values": [],
      "description": ""
    },
    "-fx-vertical-zero-line-visible": {
      "values": [],
      "description": ""
    }
  },
  "pseudoSelectors": {
    ":disabled": {
      "description": "applies when the disabled variable is true"
    },
    ":focused": {
      "description": "applies when the focused variable is true"
    },
    ":hover": {
      "description": "applies when the hover variable is true"
    },
    ":pressed": {
      "description": "applies when the pressed variable is true"
    },
    ":show-mnemonic": {
      "description": "apples when the mnemonic affordance (typically an underscore) should be shown."
    },
    ":cancel": {
      "description": "applies if this Button receives VK_ESC if the event is not otherwise consumed"
    },
    ":default": {
      "description": "applies if this Button receives VK_ENTER if the event is not otherwise consumed"
    },
    ":armed": {
      "description": "applies when the armed variable is true"
    },
    ":empty": {
      "description": "applies when the empty variable is true"
    },
    ":filled": {
      "description": "applies when the empty variable is false"
    },
    ":selected": {
      "description": "applies if this ToggleButton is selected"
    },
    ":determinate": {
      "description": "applies if the indeterminate variable is false"
    },
    ":indeterminate": {
      "description": "applies when the indeterminate variable is true"
    },
    ":editable": {
      "description": "applies when the editable variable is true"
    },
    ":showing": {
      "description": "applies if the showing variable is true"
    },
    ":visited": {
      "description": "applies when the visited variable is true"
    },
    ":even": {
      "description": "applies if this cell's index is even"
    },
    ":odd": {
      "description": "applies if this cell's index is odd"
    },
    ":horizontal": {
      "description": "applies if this ToolBar is horizontal"
    },
    ":vertical": {
      "description": "applies if this ToolBar is vertical"
    },
    ":openvertically": {
      "description": "applies if the openVertically variable is true"
    },
    ":indetermindate": {
      "description": "applies if the indeterminate variable is true"
    },
    ":pannable": {
      "description": "applies if this ScrollPane is pannable"
    },
    ":fitToWidth": {
      "description": "applies if this ScrollPane is fitToWidth"
    },
    ":fitToHeight": {
      "description": "applies if this ScrollPane is fitToHeight"
    },
    ":top": {
      "description": "applies if the side is top"
    },
    ":right": {
      "description": "applies if the side is rght"
    },
    ":bottom": {
      "description": "applies if the side is bottom"
    },
    ":left": {
      "description": "applies if the side is left"
    },
    ":last-visible": {
      "description": "true if this is the last visible cell, typically the right-most cell in the TreeTableView"
    },
    ":cell-selection": {
      "description": "applies if this TableView's selection model is cell selection"
    },
    ":row-selection": {
      "description": "applies if this TableView's selection model is row selection"
    },
    ":readonly": {
      "description": "applies if this TextInputControl is not editable"
    },
    ":expanded": {
      "description": "applies if this cell is expanded"
    },
    ":collapsed": {
      "description": "applies if this cell is not expanded"
    }
  },
  "classNames": {
    ".image-view": {},
    ".dialog-pane": {},
    ".media-view": {},
    ".web-view": {},
    ".accordion": {},
    ".button": {},
    ".cell": {},
    ".check-box": {},
    ".choice-box": {},
    ".color-picker": {},
    ".combo-box": {},
    ".combo-box-base": {},
    ".context-menu": {},
    ".date-picker": {},
    ".html-editor": {},
    ".hyperlink": {},
    ".indexed-cell": {},
    ".label": {},
    ".list-cell": {},
    ".list-view": {},
    ".menu": {},
    ".menu-bar": {},
    ".menu-button": {},
    ".menu-item": {},
    ".pagination": {},
    ".password-field": {},
    ".progress-bar": {},
    ".progress-indicator": {},
    ".radio-button": {},
    ".scroll-bar": {},
    ".scroll-pane": {},
    ".separator": {},
    ".spinner": {},
    ".slider": {},
    ".split-menu-button": {},
    ".split-pane": {},
    ".tab-pane": {},
    ".column-header": {},
    ".table-view": {},
    ".text-area": {},
    ".text-field": {},
    ".toggle-button": {},
    ".tool-bar": {},
    ".tooltip": {},
    ".tree-cell": {},
    ".tree-table-cell": {},
    ".tree-table-view": {},
    ".tree-view": {},
    ".axis": {},
    ".chart": {},
    ".chart-legend": {}
  }
}
